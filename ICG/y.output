Terminals unused in grammar

   FOR
   CASE
   DEFAULT
   DOT
   COLON
   NOT
   BNOT
   "then"
   MOD


State 6 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 204 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: START DEC0 SEMICOLON
    2      | START FUNC_DEC SEMICOLON
    3      | START FUNC_DEF
    4      | SEMICOLON
    5      | %empty

    6 STATEMENT_BLOCK: STATEMENT_BLOCK STATEMENT
    7                | STATEMENT

    8 STATEMENT: EXPR0 SEMICOLON
    9          | DEC0 SEMICOLON
   10          | IF_CONS
   11          | WHILE_LOOP
   12          | DO_WHILE
   13          | L_BRACE STATEMENT_BLOCK R_BRACE
   14          | L_BRACE R_BRACE
   15          | RETURN EXPR1 SEMICOLON
   16          | RETURN SEMICOLON
   17          | BREAK SEMICOLON
   18          | SEMICOLON

   19 $@1: %empty

   20 $@2: %empty

   21 IF_CONS: IF L_PAREN EXPR0 R_PAREN $@1 STATEMENT $@2 ELSE_STATEMENT

   22 ELSE_STATEMENT: ELSE STATEMENT
   23               | %empty

   24 WHILE_LOOP: WHILE L_PAREN EXPR0 R_PAREN STATEMENT

   25 DO_WHILE: DO STATEMENT WHILE L_PAREN EXPR0 R_PAREN SEMICOLON

   26 FUNC_DEC: CHAR IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN
   27         | NUM_TYPE IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN
   28         | VOID IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN

   29 FUNC_DEF: FUNC_DEC L_BRACE STATEMENT_BLOCK R_BRACE

   30 FUNC_PARAMS: FUNC_PARAMS1
   31            | %empty

   32 FUNC_PARAMS1: NUM_TYPE IDENTIFIER COMMA FUNC_PARAMS1
   33             | CHAR IDENTIFIER COMMA FUNC_PARAMS1
   34             | NUM_TYPE IDENTIFIER
   35             | CHAR IDENTIFIER

   36 FUNC_CALL: IDENTIFIER L_PAREN FUNC_LIST R_PAREN
   37          | IDENTIFIER L_PAREN R_PAREN

   38 FUNC_LIST: EXPR1
   39          | CONST_STR
   40          | EXPR1 COMMA FUNC_LIST
   41          | CONST_CHAR COMMA FUNC_LIST
   42          | CONST_STR COMMA FUNC_LIST

   43 DEC0: NUM_TYPE DEC1
   44     | CHR_TYPE DEC1

   45 CHR_TYPE: CHAR

   46 DEC1: DEC1 COMMA DEC2
   47     | DEC2

   48 DEC2: IDENTIFIER EQUAL EXPR1
   49     | DEC_ARR EQUAL L_BRACE EXPR0 R_BRACE
   50     | DEC_ARR
   51     | IDENTIFIER

   52 DEC_ARR: IDENTIFIER L_SQ_BRACE CONST_INT R_SQ_BRACE

   53 ARR: IDENTIFIER L_SQ_BRACE CONST_INT R_SQ_BRACE
   54    | IDENTIFIER L_SQ_BRACE EXPR0 R_SQ_BRACE

   55 EXPR0: EXPR0 COMMA EXPR1
   56      | EXPR1

   57 EXPR1: LVAL EQUAL EXPR1
   58      | LVAL PEQUAL EXPR1
   59      | LVAL MEQUAL EXPR1
   60      | LVAL SEQUAL EXPR1
   61      | LVAL BEQUAL EXPR1
   62      | EXPR1G

   63 EXPR1G: EXPR1G OR EXPR1F
   64       | EXPR1F

   65 EXPR1F: EXPR1F AND EXPR1E
   66       | EXPR1E

   67 EXPR1E: EXPR1E BOR EXPR1D
   68       | EXPR1D

   69 EXPR1D: EXPR1D CARROT EXPR1C
   70       | EXPR1C

   71 EXPR1C: EXPR1C BAND EXPR1B
   72       | EXPR1B

   73 EXPR1B: EXPR1B EQUALITY EXPR1A
   74       | EXPR1B NEQUAL EXPR1A
   75       | EXPR1A

   76 EXPR1A: EXPR1A GREAT EXPR2
   77       | EXPR1A LESS EXPR2
   78       | EXPR1A EGREAT EXPR2
   79       | EXPR1A ELESS EXPR2
   80       | EXPR2

   81 EXPR2: EXPR2 PLUS EXPR3
   82      | EXPR2 MINUS EXPR3
   83      | EXPR3

   84 EXPR3: EXPR3 MULTIPLY EXPR3A
   85      | EXPR3 DIVIDE EXPR3A
   86      | EXPR3A

   87 EXPR3A: INCR LVAL
   88       | DECR LVAL
   89       | PLUS EXPR4
   90       | MINUS EXPR4
   91       | BAND LVAL
   92       | FUNC_CALL
   93       | EXPR4

   94 EXPR4: L_PAREN EXPR0 R_PAREN
   95      | LVAL INCR
   96      | LVAL DECR
   97      | NUM
   98      | LVAL
   99      | L_PAREN NUM_TYPE R_PAREN

  100 LVAL: IDENTIFIER
  101     | ARR
  102     | L_PAREN LVAL R_PAREN

  103 NUM: CONST_FLOAT
  104    | CONST_INT
  105    | CONST_CHAR

  106 NUM_TYPE: INT
  107         | FLOAT
  108         | SIGNED INT
  109         | SIGNED FLOAT
  110         | UNSIGNED INT
  111         | UNSIGNED FLOAT


Terminals, with rules where they appear

$end (0) 0
error (256)
RETURN (258) 15 16
BREAK (259) 17
UNSIGNED (260) 110 111
SIGNED (261) 108 109
DO (262) 25
WHILE (263) 24 25
FOR (264)
IF (265) 21
ELSE (266) 22
CASE (267)
DEFAULT (268)
L_BRACE (269) 13 14 29 49
R_BRACE (270) 13 14 29 49
L_SQ_BRACE (271) 52 53 54
R_SQ_BRACE (272) 52 53 54
L_PAREN (273) 21 24 25 26 27 28 36 37 94 99 102
R_PAREN (274) 21 24 25 26 27 28 36 37 94 99 102
DOT (275)
SEMICOLON (276) 1 2 4 8 9 15 16 17 18 25
COLON (277)
INCR (278) 87 95
DECR (279) 88 96
NOT (280)
BNOT (281)
"then" (282)
MULTIPLY (283) 84
DIVIDE (284) 85
MOD (285)
PLUS (286) 81 89
MINUS (287) 82 90
GREAT (288) 76
LESS (289) 77
EGREAT (290) 78
ELESS (291) 79
EQUALITY (292) 73
NEQUAL (293) 74
BAND (294) 71 91
CARROT (295) 69
BOR (296) 67
AND (297) 65
OR (298) 63
EQUAL (299) 48 49 57
PEQUAL (300) 58
MEQUAL (301) 59
SEQUAL (302) 60
BEQUAL (303) 61
COMMA (304) 32 33 40 41 42 46 55
CHAR (305) 26 33 35 45
FLOAT (306) 107 109 111
VOID (307) 28
INT (308) 106 108 110
IDENTIFIER (309) 26 27 28 32 33 34 35 36 37 48 51 52 53 54 100
CONST_FLOAT (310) 103
CONST_INT (311) 52 53 104
CONST_CHAR (312) 41 105
CONST_STR (313) 39 42


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
START (60)
    on left: 1 2 3 4 5, on right: 0 1 2 3
STATEMENT_BLOCK (61)
    on left: 6 7, on right: 6 13 29
STATEMENT (62)
    on left: 8 9 10 11 12 13 14 15 16 17 18, on right: 6 7 21 22 24
    25
IF_CONS (63)
    on left: 21, on right: 10
$@1 (64)
    on left: 19, on right: 21
$@2 (65)
    on left: 20, on right: 21
ELSE_STATEMENT (66)
    on left: 22 23, on right: 21
WHILE_LOOP (67)
    on left: 24, on right: 11
DO_WHILE (68)
    on left: 25, on right: 12
FUNC_DEC (69)
    on left: 26 27 28, on right: 2 29
FUNC_DEF (70)
    on left: 29, on right: 3
FUNC_PARAMS (71)
    on left: 30 31, on right: 26 27 28
FUNC_PARAMS1 (72)
    on left: 32 33 34 35, on right: 30 32 33
FUNC_CALL (73)
    on left: 36 37, on right: 92
FUNC_LIST (74)
    on left: 38 39 40 41 42, on right: 36 40 41 42
DEC0 (75)
    on left: 43 44, on right: 1 9
CHR_TYPE (76)
    on left: 45, on right: 44
DEC1 (77)
    on left: 46 47, on right: 43 44 46
DEC2 (78)
    on left: 48 49 50 51, on right: 46 47
DEC_ARR (79)
    on left: 52, on right: 49 50
ARR (80)
    on left: 53 54, on right: 101
EXPR0 (81)
    on left: 55 56, on right: 8 21 24 25 49 54 55 94
EXPR1 (82)
    on left: 57 58 59 60 61 62, on right: 15 38 40 48 55 56 57 58 59
    60 61
EXPR1G (83)
    on left: 63 64, on right: 62 63
EXPR1F (84)
    on left: 65 66, on right: 63 64 65
EXPR1E (85)
    on left: 67 68, on right: 65 66 67
EXPR1D (86)
    on left: 69 70, on right: 67 68 69
EXPR1C (87)
    on left: 71 72, on right: 69 70 71
EXPR1B (88)
    on left: 73 74 75, on right: 71 72 73 74
EXPR1A (89)
    on left: 76 77 78 79 80, on right: 73 74 75 76 77 78 79
EXPR2 (90)
    on left: 81 82 83, on right: 76 77 78 79 80 81 82
EXPR3 (91)
    on left: 84 85 86, on right: 81 82 83 84 85
EXPR3A (92)
    on left: 87 88 89 90 91 92 93, on right: 84 85 86
EXPR4 (93)
    on left: 94 95 96 97 98 99, on right: 89 90 93
LVAL (94)
    on left: 100 101 102, on right: 57 58 59 60 61 87 88 91 95 96 98
    102
NUM (95)
    on left: 103 104 105, on right: 97
NUM_TYPE (96)
    on left: 106 107 108 109 110 111, on right: 27 32 34 43 99


State 0

    0 $accept: . START $end

    SEMICOLON  shift, and go to state 1

    $default  reduce using rule 5 (START)

    START  go to state 2


State 1

    4 START: SEMICOLON .

    $default  reduce using rule 4 (START)


State 2

    0 $accept: START . $end
    1 START: START . DEC0 SEMICOLON
    2      | START . FUNC_DEC SEMICOLON
    3      | START . FUNC_DEF

    $end      shift, and go to state 3
    UNSIGNED  shift, and go to state 4
    SIGNED    shift, and go to state 5
    CHAR      shift, and go to state 6
    FLOAT     shift, and go to state 7
    VOID      shift, and go to state 8
    INT       shift, and go to state 9

    FUNC_DEC  go to state 10
    FUNC_DEF  go to state 11
    DEC0      go to state 12
    CHR_TYPE  go to state 13
    NUM_TYPE  go to state 14


State 3

    0 $accept: START $end .

    $default  accept


State 4

  110 NUM_TYPE: UNSIGNED . INT
  111         | UNSIGNED . FLOAT

    FLOAT  shift, and go to state 15
    INT    shift, and go to state 16


State 5

  108 NUM_TYPE: SIGNED . INT
  109         | SIGNED . FLOAT

    FLOAT  shift, and go to state 17
    INT    shift, and go to state 18


State 6

   26 FUNC_DEC: CHAR . IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN
   45 CHR_TYPE: CHAR .

    IDENTIFIER  shift, and go to state 19

    IDENTIFIER  [reduce using rule 45 (CHR_TYPE)]


State 7

  107 NUM_TYPE: FLOAT .

    $default  reduce using rule 107 (NUM_TYPE)


State 8

   28 FUNC_DEC: VOID . IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN

    IDENTIFIER  shift, and go to state 20


State 9

  106 NUM_TYPE: INT .

    $default  reduce using rule 106 (NUM_TYPE)


State 10

    2 START: START FUNC_DEC . SEMICOLON
   29 FUNC_DEF: FUNC_DEC . L_BRACE STATEMENT_BLOCK R_BRACE

    L_BRACE    shift, and go to state 21
    SEMICOLON  shift, and go to state 22


State 11

    3 START: START FUNC_DEF .

    $default  reduce using rule 3 (START)


State 12

    1 START: START DEC0 . SEMICOLON

    SEMICOLON  shift, and go to state 23


State 13

   44 DEC0: CHR_TYPE . DEC1

    IDENTIFIER  shift, and go to state 24

    DEC1     go to state 25
    DEC2     go to state 26
    DEC_ARR  go to state 27


State 14

   27 FUNC_DEC: NUM_TYPE . IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN
   43 DEC0: NUM_TYPE . DEC1

    IDENTIFIER  shift, and go to state 28

    DEC1     go to state 29
    DEC2     go to state 26
    DEC_ARR  go to state 27


State 15

  111 NUM_TYPE: UNSIGNED FLOAT .

    $default  reduce using rule 111 (NUM_TYPE)


State 16

  110 NUM_TYPE: UNSIGNED INT .

    $default  reduce using rule 110 (NUM_TYPE)


State 17

  109 NUM_TYPE: SIGNED FLOAT .

    $default  reduce using rule 109 (NUM_TYPE)


State 18

  108 NUM_TYPE: SIGNED INT .

    $default  reduce using rule 108 (NUM_TYPE)


State 19

   26 FUNC_DEC: CHAR IDENTIFIER . L_PAREN FUNC_PARAMS R_PAREN

    L_PAREN  shift, and go to state 30


State 20

   28 FUNC_DEC: VOID IDENTIFIER . L_PAREN FUNC_PARAMS R_PAREN

    L_PAREN  shift, and go to state 31


State 21

   29 FUNC_DEF: FUNC_DEC L_BRACE . STATEMENT_BLOCK R_BRACE

    RETURN       shift, and go to state 32
    BREAK        shift, and go to state 33
    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    DO           shift, and go to state 34
    WHILE        shift, and go to state 35
    IF           shift, and go to state 36
    L_BRACE      shift, and go to state 37
    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    CHAR         shift, and go to state 45
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    STATEMENT_BLOCK  go to state 50
    STATEMENT        go to state 51
    IF_CONS          go to state 52
    WHILE_LOOP       go to state 53
    DO_WHILE         go to state 54
    FUNC_CALL        go to state 55
    DEC0             go to state 56
    CHR_TYPE         go to state 13
    ARR              go to state 57
    EXPR0            go to state 58
    EXPR1            go to state 59
    EXPR1G           go to state 60
    EXPR1F           go to state 61
    EXPR1E           go to state 62
    EXPR1D           go to state 63
    EXPR1C           go to state 64
    EXPR1B           go to state 65
    EXPR1A           go to state 66
    EXPR2            go to state 67
    EXPR3            go to state 68
    EXPR3A           go to state 69
    EXPR4            go to state 70
    LVAL             go to state 71
    NUM              go to state 72
    NUM_TYPE         go to state 73


State 22

    2 START: START FUNC_DEC SEMICOLON .

    $default  reduce using rule 2 (START)


State 23

    1 START: START DEC0 SEMICOLON .

    $default  reduce using rule 1 (START)


State 24

   48 DEC2: IDENTIFIER . EQUAL EXPR1
   51     | IDENTIFIER .
   52 DEC_ARR: IDENTIFIER . L_SQ_BRACE CONST_INT R_SQ_BRACE

    L_SQ_BRACE  shift, and go to state 74
    EQUAL       shift, and go to state 75

    $default  reduce using rule 51 (DEC2)


State 25

   44 DEC0: CHR_TYPE DEC1 .
   46 DEC1: DEC1 . COMMA DEC2

    COMMA  shift, and go to state 76

    $default  reduce using rule 44 (DEC0)


State 26

   47 DEC1: DEC2 .

    $default  reduce using rule 47 (DEC1)


State 27

   49 DEC2: DEC_ARR . EQUAL L_BRACE EXPR0 R_BRACE
   50     | DEC_ARR .

    EQUAL  shift, and go to state 77

    $default  reduce using rule 50 (DEC2)


State 28

   27 FUNC_DEC: NUM_TYPE IDENTIFIER . L_PAREN FUNC_PARAMS R_PAREN
   48 DEC2: IDENTIFIER . EQUAL EXPR1
   51     | IDENTIFIER .
   52 DEC_ARR: IDENTIFIER . L_SQ_BRACE CONST_INT R_SQ_BRACE

    L_SQ_BRACE  shift, and go to state 74
    L_PAREN     shift, and go to state 78
    EQUAL       shift, and go to state 75

    $default  reduce using rule 51 (DEC2)


State 29

   43 DEC0: NUM_TYPE DEC1 .
   46 DEC1: DEC1 . COMMA DEC2

    COMMA  shift, and go to state 76

    $default  reduce using rule 43 (DEC0)


State 30

   26 FUNC_DEC: CHAR IDENTIFIER L_PAREN . FUNC_PARAMS R_PAREN

    UNSIGNED  shift, and go to state 4
    SIGNED    shift, and go to state 5
    CHAR      shift, and go to state 79
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9

    $default  reduce using rule 31 (FUNC_PARAMS)

    FUNC_PARAMS   go to state 80
    FUNC_PARAMS1  go to state 81
    NUM_TYPE      go to state 82


State 31

   28 FUNC_DEC: VOID IDENTIFIER L_PAREN . FUNC_PARAMS R_PAREN

    UNSIGNED  shift, and go to state 4
    SIGNED    shift, and go to state 5
    CHAR      shift, and go to state 79
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9

    $default  reduce using rule 31 (FUNC_PARAMS)

    FUNC_PARAMS   go to state 83
    FUNC_PARAMS1  go to state 81
    NUM_TYPE      go to state 82


State 32

   15 STATEMENT: RETURN . EXPR1 SEMICOLON
   16          | RETURN . SEMICOLON

    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 84
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1      go to state 85
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 33

   17 STATEMENT: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 34

   25 DO_WHILE: DO . STATEMENT WHILE L_PAREN EXPR0 R_PAREN SEMICOLON

    RETURN       shift, and go to state 32
    BREAK        shift, and go to state 33
    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    DO           shift, and go to state 34
    WHILE        shift, and go to state 35
    IF           shift, and go to state 36
    L_BRACE      shift, and go to state 37
    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    CHAR         shift, and go to state 45
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    STATEMENT   go to state 87
    IF_CONS     go to state 52
    WHILE_LOOP  go to state 53
    DO_WHILE    go to state 54
    FUNC_CALL   go to state 55
    DEC0        go to state 56
    CHR_TYPE    go to state 13
    ARR         go to state 57
    EXPR0       go to state 58
    EXPR1       go to state 59
    EXPR1G      go to state 60
    EXPR1F      go to state 61
    EXPR1E      go to state 62
    EXPR1D      go to state 63
    EXPR1C      go to state 64
    EXPR1B      go to state 65
    EXPR1A      go to state 66
    EXPR2       go to state 67
    EXPR3       go to state 68
    EXPR3A      go to state 69
    EXPR4       go to state 70
    LVAL        go to state 71
    NUM         go to state 72
    NUM_TYPE    go to state 73


State 35

   24 WHILE_LOOP: WHILE . L_PAREN EXPR0 R_PAREN STATEMENT

    L_PAREN  shift, and go to state 88


State 36

   21 IF_CONS: IF . L_PAREN EXPR0 R_PAREN $@1 STATEMENT $@2 ELSE_STATEMENT

    L_PAREN  shift, and go to state 89


State 37

   13 STATEMENT: L_BRACE . STATEMENT_BLOCK R_BRACE
   14          | L_BRACE . R_BRACE

    RETURN       shift, and go to state 32
    BREAK        shift, and go to state 33
    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    DO           shift, and go to state 34
    WHILE        shift, and go to state 35
    IF           shift, and go to state 36
    L_BRACE      shift, and go to state 37
    R_BRACE      shift, and go to state 90
    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    CHAR         shift, and go to state 45
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    STATEMENT_BLOCK  go to state 91
    STATEMENT        go to state 51
    IF_CONS          go to state 52
    WHILE_LOOP       go to state 53
    DO_WHILE         go to state 54
    FUNC_CALL        go to state 55
    DEC0             go to state 56
    CHR_TYPE         go to state 13
    ARR              go to state 57
    EXPR0            go to state 58
    EXPR1            go to state 59
    EXPR1G           go to state 60
    EXPR1F           go to state 61
    EXPR1E           go to state 62
    EXPR1D           go to state 63
    EXPR1C           go to state 64
    EXPR1B           go to state 65
    EXPR1A           go to state 66
    EXPR2            go to state 67
    EXPR3            go to state 68
    EXPR3A           go to state 69
    EXPR4            go to state 70
    LVAL             go to state 71
    NUM              go to state 72
    NUM_TYPE         go to state 73


State 38

   94 EXPR4: L_PAREN . EXPR0 R_PAREN
   99      | L_PAREN . NUM_TYPE R_PAREN
  102 LVAL: L_PAREN . LVAL R_PAREN

    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR0      go to state 92
    EXPR1      go to state 59
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 93
    NUM        go to state 72
    NUM_TYPE   go to state 94


State 39

   18 STATEMENT: SEMICOLON .

    $default  reduce using rule 18 (STATEMENT)


State 40

   87 EXPR3A: INCR . LVAL

    L_PAREN     shift, and go to state 95
    IDENTIFIER  shift, and go to state 96

    ARR   go to state 57
    LVAL  go to state 97


State 41

   88 EXPR3A: DECR . LVAL

    L_PAREN     shift, and go to state 95
    IDENTIFIER  shift, and go to state 96

    ARR   go to state 57
    LVAL  go to state 98


State 42

   89 EXPR3A: PLUS . EXPR4

    L_PAREN      shift, and go to state 38
    IDENTIFIER   shift, and go to state 96
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    ARR    go to state 57
    EXPR4  go to state 99
    LVAL   go to state 100
    NUM    go to state 72


State 43

   90 EXPR3A: MINUS . EXPR4

    L_PAREN      shift, and go to state 38
    IDENTIFIER   shift, and go to state 96
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    ARR    go to state 57
    EXPR4  go to state 101
    LVAL   go to state 100
    NUM    go to state 72


State 44

   91 EXPR3A: BAND . LVAL

    L_PAREN     shift, and go to state 95
    IDENTIFIER  shift, and go to state 96

    ARR   go to state 57
    LVAL  go to state 102


State 45

   45 CHR_TYPE: CHAR .

    $default  reduce using rule 45 (CHR_TYPE)


State 46

   36 FUNC_CALL: IDENTIFIER . L_PAREN FUNC_LIST R_PAREN
   37          | IDENTIFIER . L_PAREN R_PAREN
   53 ARR: IDENTIFIER . L_SQ_BRACE CONST_INT R_SQ_BRACE
   54    | IDENTIFIER . L_SQ_BRACE EXPR0 R_SQ_BRACE
  100 LVAL: IDENTIFIER .

    L_SQ_BRACE  shift, and go to state 103
    L_PAREN     shift, and go to state 104

    $default  reduce using rule 100 (LVAL)


State 47

  103 NUM: CONST_FLOAT .

    $default  reduce using rule 103 (NUM)


State 48

  104 NUM: CONST_INT .

    $default  reduce using rule 104 (NUM)


State 49

  105 NUM: CONST_CHAR .

    $default  reduce using rule 105 (NUM)


State 50

    6 STATEMENT_BLOCK: STATEMENT_BLOCK . STATEMENT
   29 FUNC_DEF: FUNC_DEC L_BRACE STATEMENT_BLOCK . R_BRACE

    RETURN       shift, and go to state 32
    BREAK        shift, and go to state 33
    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    DO           shift, and go to state 34
    WHILE        shift, and go to state 35
    IF           shift, and go to state 36
    L_BRACE      shift, and go to state 37
    R_BRACE      shift, and go to state 105
    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    CHAR         shift, and go to state 45
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    STATEMENT   go to state 106
    IF_CONS     go to state 52
    WHILE_LOOP  go to state 53
    DO_WHILE    go to state 54
    FUNC_CALL   go to state 55
    DEC0        go to state 56
    CHR_TYPE    go to state 13
    ARR         go to state 57
    EXPR0       go to state 58
    EXPR1       go to state 59
    EXPR1G      go to state 60
    EXPR1F      go to state 61
    EXPR1E      go to state 62
    EXPR1D      go to state 63
    EXPR1C      go to state 64
    EXPR1B      go to state 65
    EXPR1A      go to state 66
    EXPR2       go to state 67
    EXPR3       go to state 68
    EXPR3A      go to state 69
    EXPR4       go to state 70
    LVAL        go to state 71
    NUM         go to state 72
    NUM_TYPE    go to state 73


State 51

    7 STATEMENT_BLOCK: STATEMENT .

    $default  reduce using rule 7 (STATEMENT_BLOCK)


State 52

   10 STATEMENT: IF_CONS .

    $default  reduce using rule 10 (STATEMENT)


State 53

   11 STATEMENT: WHILE_LOOP .

    $default  reduce using rule 11 (STATEMENT)


State 54

   12 STATEMENT: DO_WHILE .

    $default  reduce using rule 12 (STATEMENT)


State 55

   92 EXPR3A: FUNC_CALL .

    $default  reduce using rule 92 (EXPR3A)


State 56

    9 STATEMENT: DEC0 . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 57

  101 LVAL: ARR .

    $default  reduce using rule 101 (LVAL)


State 58

    8 STATEMENT: EXPR0 . SEMICOLON
   55 EXPR0: EXPR0 . COMMA EXPR1

    SEMICOLON  shift, and go to state 108
    COMMA      shift, and go to state 109


State 59

   56 EXPR0: EXPR1 .

    $default  reduce using rule 56 (EXPR0)


State 60

   62 EXPR1: EXPR1G .
   63 EXPR1G: EXPR1G . OR EXPR1F

    OR  shift, and go to state 110

    $default  reduce using rule 62 (EXPR1)


State 61

   64 EXPR1G: EXPR1F .
   65 EXPR1F: EXPR1F . AND EXPR1E

    AND  shift, and go to state 111

    $default  reduce using rule 64 (EXPR1G)


State 62

   66 EXPR1F: EXPR1E .
   67 EXPR1E: EXPR1E . BOR EXPR1D

    BOR  shift, and go to state 112

    $default  reduce using rule 66 (EXPR1F)


State 63

   68 EXPR1E: EXPR1D .
   69 EXPR1D: EXPR1D . CARROT EXPR1C

    CARROT  shift, and go to state 113

    $default  reduce using rule 68 (EXPR1E)


State 64

   70 EXPR1D: EXPR1C .
   71 EXPR1C: EXPR1C . BAND EXPR1B

    BAND  shift, and go to state 114

    $default  reduce using rule 70 (EXPR1D)


State 65

   72 EXPR1C: EXPR1B .
   73 EXPR1B: EXPR1B . EQUALITY EXPR1A
   74       | EXPR1B . NEQUAL EXPR1A

    EQUALITY  shift, and go to state 115
    NEQUAL    shift, and go to state 116

    $default  reduce using rule 72 (EXPR1C)


State 66

   75 EXPR1B: EXPR1A .
   76 EXPR1A: EXPR1A . GREAT EXPR2
   77       | EXPR1A . LESS EXPR2
   78       | EXPR1A . EGREAT EXPR2
   79       | EXPR1A . ELESS EXPR2

    GREAT   shift, and go to state 117
    LESS    shift, and go to state 118
    EGREAT  shift, and go to state 119
    ELESS   shift, and go to state 120

    $default  reduce using rule 75 (EXPR1B)


State 67

   80 EXPR1A: EXPR2 .
   81 EXPR2: EXPR2 . PLUS EXPR3
   82      | EXPR2 . MINUS EXPR3

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122

    $default  reduce using rule 80 (EXPR1A)


State 68

   83 EXPR2: EXPR3 .
   84 EXPR3: EXPR3 . MULTIPLY EXPR3A
   85      | EXPR3 . DIVIDE EXPR3A

    MULTIPLY  shift, and go to state 123
    DIVIDE    shift, and go to state 124

    $default  reduce using rule 83 (EXPR2)


State 69

   86 EXPR3: EXPR3A .

    $default  reduce using rule 86 (EXPR3)


State 70

   93 EXPR3A: EXPR4 .

    $default  reduce using rule 93 (EXPR3A)


State 71

   57 EXPR1: LVAL . EQUAL EXPR1
   58      | LVAL . PEQUAL EXPR1
   59      | LVAL . MEQUAL EXPR1
   60      | LVAL . SEQUAL EXPR1
   61      | LVAL . BEQUAL EXPR1
   95 EXPR4: LVAL . INCR
   96      | LVAL . DECR
   98      | LVAL .

    INCR    shift, and go to state 125
    DECR    shift, and go to state 126
    EQUAL   shift, and go to state 127
    PEQUAL  shift, and go to state 128
    MEQUAL  shift, and go to state 129
    SEQUAL  shift, and go to state 130
    BEQUAL  shift, and go to state 131

    $default  reduce using rule 98 (EXPR4)


State 72

   97 EXPR4: NUM .

    $default  reduce using rule 97 (EXPR4)


State 73

   43 DEC0: NUM_TYPE . DEC1

    IDENTIFIER  shift, and go to state 24

    DEC1     go to state 29
    DEC2     go to state 26
    DEC_ARR  go to state 27


State 74

   52 DEC_ARR: IDENTIFIER L_SQ_BRACE . CONST_INT R_SQ_BRACE

    CONST_INT  shift, and go to state 132


State 75

   48 DEC2: IDENTIFIER EQUAL . EXPR1

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1      go to state 133
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 76

   46 DEC1: DEC1 COMMA . DEC2

    IDENTIFIER  shift, and go to state 24

    DEC2     go to state 134
    DEC_ARR  go to state 27


State 77

   49 DEC2: DEC_ARR EQUAL . L_BRACE EXPR0 R_BRACE

    L_BRACE  shift, and go to state 135


State 78

   27 FUNC_DEC: NUM_TYPE IDENTIFIER L_PAREN . FUNC_PARAMS R_PAREN

    UNSIGNED  shift, and go to state 4
    SIGNED    shift, and go to state 5
    CHAR      shift, and go to state 79
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9

    $default  reduce using rule 31 (FUNC_PARAMS)

    FUNC_PARAMS   go to state 136
    FUNC_PARAMS1  go to state 81
    NUM_TYPE      go to state 82


State 79

   33 FUNC_PARAMS1: CHAR . IDENTIFIER COMMA FUNC_PARAMS1
   35             | CHAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 137


State 80

   26 FUNC_DEC: CHAR IDENTIFIER L_PAREN FUNC_PARAMS . R_PAREN

    R_PAREN  shift, and go to state 138


State 81

   30 FUNC_PARAMS: FUNC_PARAMS1 .

    $default  reduce using rule 30 (FUNC_PARAMS)


State 82

   32 FUNC_PARAMS1: NUM_TYPE . IDENTIFIER COMMA FUNC_PARAMS1
   34             | NUM_TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 139


State 83

   28 FUNC_DEC: VOID IDENTIFIER L_PAREN FUNC_PARAMS . R_PAREN

    R_PAREN  shift, and go to state 140


State 84

   16 STATEMENT: RETURN SEMICOLON .

    $default  reduce using rule 16 (STATEMENT)


State 85

   15 STATEMENT: RETURN EXPR1 . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 86

   17 STATEMENT: BREAK SEMICOLON .

    $default  reduce using rule 17 (STATEMENT)


State 87

   25 DO_WHILE: DO STATEMENT . WHILE L_PAREN EXPR0 R_PAREN SEMICOLON

    WHILE  shift, and go to state 142


State 88

   24 WHILE_LOOP: WHILE L_PAREN . EXPR0 R_PAREN STATEMENT

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR0      go to state 143
    EXPR1      go to state 59
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 89

   21 IF_CONS: IF L_PAREN . EXPR0 R_PAREN $@1 STATEMENT $@2 ELSE_STATEMENT

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR0      go to state 144
    EXPR1      go to state 59
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 90

   14 STATEMENT: L_BRACE R_BRACE .

    $default  reduce using rule 14 (STATEMENT)


State 91

    6 STATEMENT_BLOCK: STATEMENT_BLOCK . STATEMENT
   13 STATEMENT: L_BRACE STATEMENT_BLOCK . R_BRACE

    RETURN       shift, and go to state 32
    BREAK        shift, and go to state 33
    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    DO           shift, and go to state 34
    WHILE        shift, and go to state 35
    IF           shift, and go to state 36
    L_BRACE      shift, and go to state 37
    R_BRACE      shift, and go to state 145
    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    CHAR         shift, and go to state 45
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    STATEMENT   go to state 106
    IF_CONS     go to state 52
    WHILE_LOOP  go to state 53
    DO_WHILE    go to state 54
    FUNC_CALL   go to state 55
    DEC0        go to state 56
    CHR_TYPE    go to state 13
    ARR         go to state 57
    EXPR0       go to state 58
    EXPR1       go to state 59
    EXPR1G      go to state 60
    EXPR1F      go to state 61
    EXPR1E      go to state 62
    EXPR1D      go to state 63
    EXPR1C      go to state 64
    EXPR1B      go to state 65
    EXPR1A      go to state 66
    EXPR2       go to state 67
    EXPR3       go to state 68
    EXPR3A      go to state 69
    EXPR4       go to state 70
    LVAL        go to state 71
    NUM         go to state 72
    NUM_TYPE    go to state 73


State 92

   55 EXPR0: EXPR0 . COMMA EXPR1
   94 EXPR4: L_PAREN EXPR0 . R_PAREN

    R_PAREN  shift, and go to state 146
    COMMA    shift, and go to state 109


State 93

   57 EXPR1: LVAL . EQUAL EXPR1
   58      | LVAL . PEQUAL EXPR1
   59      | LVAL . MEQUAL EXPR1
   60      | LVAL . SEQUAL EXPR1
   61      | LVAL . BEQUAL EXPR1
   95 EXPR4: LVAL . INCR
   96      | LVAL . DECR
   98      | LVAL .
  102 LVAL: L_PAREN LVAL . R_PAREN

    R_PAREN  shift, and go to state 147
    INCR     shift, and go to state 125
    DECR     shift, and go to state 126
    EQUAL    shift, and go to state 127
    PEQUAL   shift, and go to state 128
    MEQUAL   shift, and go to state 129
    SEQUAL   shift, and go to state 130
    BEQUAL   shift, and go to state 131

    R_PAREN   [reduce using rule 98 (EXPR4)]
    $default  reduce using rule 98 (EXPR4)


State 94

   99 EXPR4: L_PAREN NUM_TYPE . R_PAREN

    R_PAREN  shift, and go to state 148


State 95

  102 LVAL: L_PAREN . LVAL R_PAREN

    L_PAREN     shift, and go to state 95
    IDENTIFIER  shift, and go to state 96

    ARR   go to state 57
    LVAL  go to state 149


State 96

   53 ARR: IDENTIFIER . L_SQ_BRACE CONST_INT R_SQ_BRACE
   54    | IDENTIFIER . L_SQ_BRACE EXPR0 R_SQ_BRACE
  100 LVAL: IDENTIFIER .

    L_SQ_BRACE  shift, and go to state 103

    $default  reduce using rule 100 (LVAL)


State 97

   87 EXPR3A: INCR LVAL .

    $default  reduce using rule 87 (EXPR3A)


State 98

   88 EXPR3A: DECR LVAL .

    $default  reduce using rule 88 (EXPR3A)


State 99

   89 EXPR3A: PLUS EXPR4 .

    $default  reduce using rule 89 (EXPR3A)


State 100

   95 EXPR4: LVAL . INCR
   96      | LVAL . DECR
   98      | LVAL .

    INCR  shift, and go to state 125
    DECR  shift, and go to state 126

    $default  reduce using rule 98 (EXPR4)


State 101

   90 EXPR3A: MINUS EXPR4 .

    $default  reduce using rule 90 (EXPR3A)


State 102

   91 EXPR3A: BAND LVAL .

    $default  reduce using rule 91 (EXPR3A)


State 103

   53 ARR: IDENTIFIER L_SQ_BRACE . CONST_INT R_SQ_BRACE
   54    | IDENTIFIER L_SQ_BRACE . EXPR0 R_SQ_BRACE

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 150
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR0      go to state 151
    EXPR1      go to state 59
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 104

   36 FUNC_CALL: IDENTIFIER L_PAREN . FUNC_LIST R_PAREN
   37          | IDENTIFIER L_PAREN . R_PAREN

    L_PAREN      shift, and go to state 38
    R_PAREN      shift, and go to state 152
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 153
    CONST_STR    shift, and go to state 154

    FUNC_CALL  go to state 55
    FUNC_LIST  go to state 155
    ARR        go to state 57
    EXPR1      go to state 156
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 105

   29 FUNC_DEF: FUNC_DEC L_BRACE STATEMENT_BLOCK R_BRACE .

    $default  reduce using rule 29 (FUNC_DEF)


State 106

    6 STATEMENT_BLOCK: STATEMENT_BLOCK STATEMENT .

    $default  reduce using rule 6 (STATEMENT_BLOCK)


State 107

    9 STATEMENT: DEC0 SEMICOLON .

    $default  reduce using rule 9 (STATEMENT)


State 108

    8 STATEMENT: EXPR0 SEMICOLON .

    $default  reduce using rule 8 (STATEMENT)


State 109

   55 EXPR0: EXPR0 COMMA . EXPR1

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1      go to state 157
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 110

   63 EXPR1G: EXPR1G OR . EXPR1F

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1F     go to state 158
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 111

   65 EXPR1F: EXPR1F AND . EXPR1E

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1E     go to state 159
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 112

   67 EXPR1E: EXPR1E BOR . EXPR1D

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1D     go to state 160
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 113

   69 EXPR1D: EXPR1D CARROT . EXPR1C

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1C     go to state 161
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 114

   71 EXPR1C: EXPR1C BAND . EXPR1B

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1B     go to state 162
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 115

   73 EXPR1B: EXPR1B EQUALITY . EXPR1A

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1A     go to state 163
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 116

   74 EXPR1B: EXPR1B NEQUAL . EXPR1A

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1A     go to state 164
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 117

   76 EXPR1A: EXPR1A GREAT . EXPR2

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR2      go to state 165
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 118

   77 EXPR1A: EXPR1A LESS . EXPR2

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR2      go to state 166
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 119

   78 EXPR1A: EXPR1A EGREAT . EXPR2

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR2      go to state 167
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 120

   79 EXPR1A: EXPR1A ELESS . EXPR2

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR2      go to state 168
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 121

   81 EXPR2: EXPR2 PLUS . EXPR3

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR3      go to state 169
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 122

   82 EXPR2: EXPR2 MINUS . EXPR3

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR3      go to state 170
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 123

   84 EXPR3: EXPR3 MULTIPLY . EXPR3A

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR3A     go to state 171
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 124

   85 EXPR3: EXPR3 DIVIDE . EXPR3A

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR3A     go to state 172
    EXPR4      go to state 70
    LVAL       go to state 100
    NUM        go to state 72


State 125

   95 EXPR4: LVAL INCR .

    $default  reduce using rule 95 (EXPR4)


State 126

   96 EXPR4: LVAL DECR .

    $default  reduce using rule 96 (EXPR4)


State 127

   57 EXPR1: LVAL EQUAL . EXPR1

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1      go to state 173
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 128

   58 EXPR1: LVAL PEQUAL . EXPR1

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1      go to state 174
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 129

   59 EXPR1: LVAL MEQUAL . EXPR1

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1      go to state 175
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 130

   60 EXPR1: LVAL SEQUAL . EXPR1

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1      go to state 176
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 131

   61 EXPR1: LVAL BEQUAL . EXPR1

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR1      go to state 177
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 132

   52 DEC_ARR: IDENTIFIER L_SQ_BRACE CONST_INT . R_SQ_BRACE

    R_SQ_BRACE  shift, and go to state 178


State 133

   48 DEC2: IDENTIFIER EQUAL EXPR1 .

    $default  reduce using rule 48 (DEC2)


State 134

   46 DEC1: DEC1 COMMA DEC2 .

    $default  reduce using rule 46 (DEC1)


State 135

   49 DEC2: DEC_ARR EQUAL L_BRACE . EXPR0 R_BRACE

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR0      go to state 179
    EXPR1      go to state 59
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 136

   27 FUNC_DEC: NUM_TYPE IDENTIFIER L_PAREN FUNC_PARAMS . R_PAREN

    R_PAREN  shift, and go to state 180


State 137

   33 FUNC_PARAMS1: CHAR IDENTIFIER . COMMA FUNC_PARAMS1
   35             | CHAR IDENTIFIER .

    COMMA  shift, and go to state 181

    $default  reduce using rule 35 (FUNC_PARAMS1)


State 138

   26 FUNC_DEC: CHAR IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN .

    $default  reduce using rule 26 (FUNC_DEC)


State 139

   32 FUNC_PARAMS1: NUM_TYPE IDENTIFIER . COMMA FUNC_PARAMS1
   34             | NUM_TYPE IDENTIFIER .

    COMMA  shift, and go to state 182

    $default  reduce using rule 34 (FUNC_PARAMS1)


State 140

   28 FUNC_DEC: VOID IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN .

    $default  reduce using rule 28 (FUNC_DEC)


State 141

   15 STATEMENT: RETURN EXPR1 SEMICOLON .

    $default  reduce using rule 15 (STATEMENT)


State 142

   25 DO_WHILE: DO STATEMENT WHILE . L_PAREN EXPR0 R_PAREN SEMICOLON

    L_PAREN  shift, and go to state 183


State 143

   24 WHILE_LOOP: WHILE L_PAREN EXPR0 . R_PAREN STATEMENT
   55 EXPR0: EXPR0 . COMMA EXPR1

    R_PAREN  shift, and go to state 184
    COMMA    shift, and go to state 109


State 144

   21 IF_CONS: IF L_PAREN EXPR0 . R_PAREN $@1 STATEMENT $@2 ELSE_STATEMENT
   55 EXPR0: EXPR0 . COMMA EXPR1

    R_PAREN  shift, and go to state 185
    COMMA    shift, and go to state 109


State 145

   13 STATEMENT: L_BRACE STATEMENT_BLOCK R_BRACE .

    $default  reduce using rule 13 (STATEMENT)


State 146

   94 EXPR4: L_PAREN EXPR0 R_PAREN .

    $default  reduce using rule 94 (EXPR4)


State 147

  102 LVAL: L_PAREN LVAL R_PAREN .

    $default  reduce using rule 102 (LVAL)


State 148

   99 EXPR4: L_PAREN NUM_TYPE R_PAREN .

    $default  reduce using rule 99 (EXPR4)


State 149

  102 LVAL: L_PAREN LVAL . R_PAREN

    R_PAREN  shift, and go to state 147


State 150

   53 ARR: IDENTIFIER L_SQ_BRACE CONST_INT . R_SQ_BRACE
  104 NUM: CONST_INT .

    R_SQ_BRACE  shift, and go to state 186

    R_SQ_BRACE  [reduce using rule 104 (NUM)]
    $default    reduce using rule 104 (NUM)


State 151

   54 ARR: IDENTIFIER L_SQ_BRACE EXPR0 . R_SQ_BRACE
   55 EXPR0: EXPR0 . COMMA EXPR1

    R_SQ_BRACE  shift, and go to state 187
    COMMA       shift, and go to state 109


State 152

   37 FUNC_CALL: IDENTIFIER L_PAREN R_PAREN .

    $default  reduce using rule 37 (FUNC_CALL)


State 153

   41 FUNC_LIST: CONST_CHAR . COMMA FUNC_LIST
  105 NUM: CONST_CHAR .

    COMMA  shift, and go to state 188

    COMMA     [reduce using rule 105 (NUM)]
    $default  reduce using rule 105 (NUM)


State 154

   39 FUNC_LIST: CONST_STR .
   42          | CONST_STR . COMMA FUNC_LIST

    COMMA  shift, and go to state 189

    $default  reduce using rule 39 (FUNC_LIST)


State 155

   36 FUNC_CALL: IDENTIFIER L_PAREN FUNC_LIST . R_PAREN

    R_PAREN  shift, and go to state 190


State 156

   38 FUNC_LIST: EXPR1 .
   40          | EXPR1 . COMMA FUNC_LIST

    COMMA  shift, and go to state 191

    $default  reduce using rule 38 (FUNC_LIST)


State 157

   55 EXPR0: EXPR0 COMMA EXPR1 .

    $default  reduce using rule 55 (EXPR0)


State 158

   63 EXPR1G: EXPR1G OR EXPR1F .
   65 EXPR1F: EXPR1F . AND EXPR1E

    AND  shift, and go to state 111

    $default  reduce using rule 63 (EXPR1G)


State 159

   65 EXPR1F: EXPR1F AND EXPR1E .
   67 EXPR1E: EXPR1E . BOR EXPR1D

    BOR  shift, and go to state 112

    $default  reduce using rule 65 (EXPR1F)


State 160

   67 EXPR1E: EXPR1E BOR EXPR1D .
   69 EXPR1D: EXPR1D . CARROT EXPR1C

    CARROT  shift, and go to state 113

    $default  reduce using rule 67 (EXPR1E)


State 161

   69 EXPR1D: EXPR1D CARROT EXPR1C .
   71 EXPR1C: EXPR1C . BAND EXPR1B

    BAND  shift, and go to state 114

    $default  reduce using rule 69 (EXPR1D)


State 162

   71 EXPR1C: EXPR1C BAND EXPR1B .
   73 EXPR1B: EXPR1B . EQUALITY EXPR1A
   74       | EXPR1B . NEQUAL EXPR1A

    EQUALITY  shift, and go to state 115
    NEQUAL    shift, and go to state 116

    $default  reduce using rule 71 (EXPR1C)


State 163

   73 EXPR1B: EXPR1B EQUALITY EXPR1A .
   76 EXPR1A: EXPR1A . GREAT EXPR2
   77       | EXPR1A . LESS EXPR2
   78       | EXPR1A . EGREAT EXPR2
   79       | EXPR1A . ELESS EXPR2

    GREAT   shift, and go to state 117
    LESS    shift, and go to state 118
    EGREAT  shift, and go to state 119
    ELESS   shift, and go to state 120

    $default  reduce using rule 73 (EXPR1B)


State 164

   74 EXPR1B: EXPR1B NEQUAL EXPR1A .
   76 EXPR1A: EXPR1A . GREAT EXPR2
   77       | EXPR1A . LESS EXPR2
   78       | EXPR1A . EGREAT EXPR2
   79       | EXPR1A . ELESS EXPR2

    GREAT   shift, and go to state 117
    LESS    shift, and go to state 118
    EGREAT  shift, and go to state 119
    ELESS   shift, and go to state 120

    $default  reduce using rule 74 (EXPR1B)


State 165

   76 EXPR1A: EXPR1A GREAT EXPR2 .
   81 EXPR2: EXPR2 . PLUS EXPR3
   82      | EXPR2 . MINUS EXPR3

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122

    $default  reduce using rule 76 (EXPR1A)


State 166

   77 EXPR1A: EXPR1A LESS EXPR2 .
   81 EXPR2: EXPR2 . PLUS EXPR3
   82      | EXPR2 . MINUS EXPR3

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122

    $default  reduce using rule 77 (EXPR1A)


State 167

   78 EXPR1A: EXPR1A EGREAT EXPR2 .
   81 EXPR2: EXPR2 . PLUS EXPR3
   82      | EXPR2 . MINUS EXPR3

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122

    $default  reduce using rule 78 (EXPR1A)


State 168

   79 EXPR1A: EXPR1A ELESS EXPR2 .
   81 EXPR2: EXPR2 . PLUS EXPR3
   82      | EXPR2 . MINUS EXPR3

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122

    $default  reduce using rule 79 (EXPR1A)


State 169

   81 EXPR2: EXPR2 PLUS EXPR3 .
   84 EXPR3: EXPR3 . MULTIPLY EXPR3A
   85      | EXPR3 . DIVIDE EXPR3A

    MULTIPLY  shift, and go to state 123
    DIVIDE    shift, and go to state 124

    $default  reduce using rule 81 (EXPR2)


State 170

   82 EXPR2: EXPR2 MINUS EXPR3 .
   84 EXPR3: EXPR3 . MULTIPLY EXPR3A
   85      | EXPR3 . DIVIDE EXPR3A

    MULTIPLY  shift, and go to state 123
    DIVIDE    shift, and go to state 124

    $default  reduce using rule 82 (EXPR2)


State 171

   84 EXPR3: EXPR3 MULTIPLY EXPR3A .

    $default  reduce using rule 84 (EXPR3)


State 172

   85 EXPR3: EXPR3 DIVIDE EXPR3A .

    $default  reduce using rule 85 (EXPR3)


State 173

   57 EXPR1: LVAL EQUAL EXPR1 .

    $default  reduce using rule 57 (EXPR1)


State 174

   58 EXPR1: LVAL PEQUAL EXPR1 .

    $default  reduce using rule 58 (EXPR1)


State 175

   59 EXPR1: LVAL MEQUAL EXPR1 .

    $default  reduce using rule 59 (EXPR1)


State 176

   60 EXPR1: LVAL SEQUAL EXPR1 .

    $default  reduce using rule 60 (EXPR1)


State 177

   61 EXPR1: LVAL BEQUAL EXPR1 .

    $default  reduce using rule 61 (EXPR1)


State 178

   52 DEC_ARR: IDENTIFIER L_SQ_BRACE CONST_INT R_SQ_BRACE .

    $default  reduce using rule 52 (DEC_ARR)


State 179

   49 DEC2: DEC_ARR EQUAL L_BRACE EXPR0 . R_BRACE
   55 EXPR0: EXPR0 . COMMA EXPR1

    R_BRACE  shift, and go to state 192
    COMMA    shift, and go to state 109


State 180

   27 FUNC_DEC: NUM_TYPE IDENTIFIER L_PAREN FUNC_PARAMS R_PAREN .

    $default  reduce using rule 27 (FUNC_DEC)


State 181

   33 FUNC_PARAMS1: CHAR IDENTIFIER COMMA . FUNC_PARAMS1

    UNSIGNED  shift, and go to state 4
    SIGNED    shift, and go to state 5
    CHAR      shift, and go to state 79
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9

    FUNC_PARAMS1  go to state 193
    NUM_TYPE      go to state 82


State 182

   32 FUNC_PARAMS1: NUM_TYPE IDENTIFIER COMMA . FUNC_PARAMS1

    UNSIGNED  shift, and go to state 4
    SIGNED    shift, and go to state 5
    CHAR      shift, and go to state 79
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9

    FUNC_PARAMS1  go to state 194
    NUM_TYPE      go to state 82


State 183

   25 DO_WHILE: DO STATEMENT WHILE L_PAREN . EXPR0 R_PAREN SEMICOLON

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    FUNC_CALL  go to state 55
    ARR        go to state 57
    EXPR0      go to state 195
    EXPR1      go to state 59
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 184

   24 WHILE_LOOP: WHILE L_PAREN EXPR0 R_PAREN . STATEMENT

    RETURN       shift, and go to state 32
    BREAK        shift, and go to state 33
    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    DO           shift, and go to state 34
    WHILE        shift, and go to state 35
    IF           shift, and go to state 36
    L_BRACE      shift, and go to state 37
    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    CHAR         shift, and go to state 45
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    STATEMENT   go to state 196
    IF_CONS     go to state 52
    WHILE_LOOP  go to state 53
    DO_WHILE    go to state 54
    FUNC_CALL   go to state 55
    DEC0        go to state 56
    CHR_TYPE    go to state 13
    ARR         go to state 57
    EXPR0       go to state 58
    EXPR1       go to state 59
    EXPR1G      go to state 60
    EXPR1F      go to state 61
    EXPR1E      go to state 62
    EXPR1D      go to state 63
    EXPR1C      go to state 64
    EXPR1B      go to state 65
    EXPR1A      go to state 66
    EXPR2       go to state 67
    EXPR3       go to state 68
    EXPR3A      go to state 69
    EXPR4       go to state 70
    LVAL        go to state 71
    NUM         go to state 72
    NUM_TYPE    go to state 73


State 185

   21 IF_CONS: IF L_PAREN EXPR0 R_PAREN . $@1 STATEMENT $@2 ELSE_STATEMENT

    $default  reduce using rule 19 ($@1)

    $@1  go to state 197


State 186

   53 ARR: IDENTIFIER L_SQ_BRACE CONST_INT R_SQ_BRACE .

    $default  reduce using rule 53 (ARR)


State 187

   54 ARR: IDENTIFIER L_SQ_BRACE EXPR0 R_SQ_BRACE .

    $default  reduce using rule 54 (ARR)


State 188

   41 FUNC_LIST: CONST_CHAR COMMA . FUNC_LIST

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 153
    CONST_STR    shift, and go to state 154

    FUNC_CALL  go to state 55
    FUNC_LIST  go to state 198
    ARR        go to state 57
    EXPR1      go to state 156
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 189

   42 FUNC_LIST: CONST_STR COMMA . FUNC_LIST

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 153
    CONST_STR    shift, and go to state 154

    FUNC_CALL  go to state 55
    FUNC_LIST  go to state 199
    ARR        go to state 57
    EXPR1      go to state 156
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 190

   36 FUNC_CALL: IDENTIFIER L_PAREN FUNC_LIST R_PAREN .

    $default  reduce using rule 36 (FUNC_CALL)


State 191

   40 FUNC_LIST: EXPR1 COMMA . FUNC_LIST

    L_PAREN      shift, and go to state 38
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 153
    CONST_STR    shift, and go to state 154

    FUNC_CALL  go to state 55
    FUNC_LIST  go to state 200
    ARR        go to state 57
    EXPR1      go to state 156
    EXPR1G     go to state 60
    EXPR1F     go to state 61
    EXPR1E     go to state 62
    EXPR1D     go to state 63
    EXPR1C     go to state 64
    EXPR1B     go to state 65
    EXPR1A     go to state 66
    EXPR2      go to state 67
    EXPR3      go to state 68
    EXPR3A     go to state 69
    EXPR4      go to state 70
    LVAL       go to state 71
    NUM        go to state 72


State 192

   49 DEC2: DEC_ARR EQUAL L_BRACE EXPR0 R_BRACE .

    $default  reduce using rule 49 (DEC2)


State 193

   33 FUNC_PARAMS1: CHAR IDENTIFIER COMMA FUNC_PARAMS1 .

    $default  reduce using rule 33 (FUNC_PARAMS1)


State 194

   32 FUNC_PARAMS1: NUM_TYPE IDENTIFIER COMMA FUNC_PARAMS1 .

    $default  reduce using rule 32 (FUNC_PARAMS1)


State 195

   25 DO_WHILE: DO STATEMENT WHILE L_PAREN EXPR0 . R_PAREN SEMICOLON
   55 EXPR0: EXPR0 . COMMA EXPR1

    R_PAREN  shift, and go to state 201
    COMMA    shift, and go to state 109


State 196

   24 WHILE_LOOP: WHILE L_PAREN EXPR0 R_PAREN STATEMENT .

    $default  reduce using rule 24 (WHILE_LOOP)


State 197

   21 IF_CONS: IF L_PAREN EXPR0 R_PAREN $@1 . STATEMENT $@2 ELSE_STATEMENT

    RETURN       shift, and go to state 32
    BREAK        shift, and go to state 33
    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    DO           shift, and go to state 34
    WHILE        shift, and go to state 35
    IF           shift, and go to state 36
    L_BRACE      shift, and go to state 37
    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    CHAR         shift, and go to state 45
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    STATEMENT   go to state 202
    IF_CONS     go to state 52
    WHILE_LOOP  go to state 53
    DO_WHILE    go to state 54
    FUNC_CALL   go to state 55
    DEC0        go to state 56
    CHR_TYPE    go to state 13
    ARR         go to state 57
    EXPR0       go to state 58
    EXPR1       go to state 59
    EXPR1G      go to state 60
    EXPR1F      go to state 61
    EXPR1E      go to state 62
    EXPR1D      go to state 63
    EXPR1C      go to state 64
    EXPR1B      go to state 65
    EXPR1A      go to state 66
    EXPR2       go to state 67
    EXPR3       go to state 68
    EXPR3A      go to state 69
    EXPR4       go to state 70
    LVAL        go to state 71
    NUM         go to state 72
    NUM_TYPE    go to state 73


State 198

   41 FUNC_LIST: CONST_CHAR COMMA FUNC_LIST .

    $default  reduce using rule 41 (FUNC_LIST)


State 199

   42 FUNC_LIST: CONST_STR COMMA FUNC_LIST .

    $default  reduce using rule 42 (FUNC_LIST)


State 200

   40 FUNC_LIST: EXPR1 COMMA FUNC_LIST .

    $default  reduce using rule 40 (FUNC_LIST)


State 201

   25 DO_WHILE: DO STATEMENT WHILE L_PAREN EXPR0 R_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 203


State 202

   21 IF_CONS: IF L_PAREN EXPR0 R_PAREN $@1 STATEMENT . $@2 ELSE_STATEMENT

    $default  reduce using rule 20 ($@2)

    $@2  go to state 204


State 203

   25 DO_WHILE: DO STATEMENT WHILE L_PAREN EXPR0 R_PAREN SEMICOLON .

    $default  reduce using rule 25 (DO_WHILE)


State 204

   21 IF_CONS: IF L_PAREN EXPR0 R_PAREN $@1 STATEMENT $@2 . ELSE_STATEMENT

    ELSE  shift, and go to state 205

    ELSE      [reduce using rule 23 (ELSE_STATEMENT)]
    $default  reduce using rule 23 (ELSE_STATEMENT)

    ELSE_STATEMENT  go to state 206


State 205

   22 ELSE_STATEMENT: ELSE . STATEMENT

    RETURN       shift, and go to state 32
    BREAK        shift, and go to state 33
    UNSIGNED     shift, and go to state 4
    SIGNED       shift, and go to state 5
    DO           shift, and go to state 34
    WHILE        shift, and go to state 35
    IF           shift, and go to state 36
    L_BRACE      shift, and go to state 37
    L_PAREN      shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    INCR         shift, and go to state 40
    DECR         shift, and go to state 41
    PLUS         shift, and go to state 42
    MINUS        shift, and go to state 43
    BAND         shift, and go to state 44
    CHAR         shift, and go to state 45
    FLOAT        shift, and go to state 7
    INT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_CHAR   shift, and go to state 49

    STATEMENT   go to state 207
    IF_CONS     go to state 52
    WHILE_LOOP  go to state 53
    DO_WHILE    go to state 54
    FUNC_CALL   go to state 55
    DEC0        go to state 56
    CHR_TYPE    go to state 13
    ARR         go to state 57
    EXPR0       go to state 58
    EXPR1       go to state 59
    EXPR1G      go to state 60
    EXPR1F      go to state 61
    EXPR1E      go to state 62
    EXPR1D      go to state 63
    EXPR1C      go to state 64
    EXPR1B      go to state 65
    EXPR1A      go to state 66
    EXPR2       go to state 67
    EXPR3       go to state 68
    EXPR3A      go to state 69
    EXPR4       go to state 70
    LVAL        go to state 71
    NUM         go to state 72
    NUM_TYPE    go to state 73


State 206

   21 IF_CONS: IF L_PAREN EXPR0 R_PAREN $@1 STATEMENT $@2 ELSE_STATEMENT .

    $default  reduce using rule 21 (IF_CONS)


State 207

   22 ELSE_STATEMENT: ELSE STATEMENT .

    $default  reduce using rule 22 (ELSE_STATEMENT)
